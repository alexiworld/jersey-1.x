<?xml version="1.0" encoding="UTF-8"?>
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 2010-2017 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    http://glassfish.java.net/public/CDDL+GPL_1_1.html
    or packager/legal/LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at packager/legal/LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

    fanningpj elects to include this software in this distribution under the CDDL license."
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.alexiworld</groupId>
    <artifactId>denim-json</artifactId>
    <version>${denim.core.version}</version>
    <packaging>jar</packaging>
    <name>denim-json</name>
    <description>A fork of com.sun.jersey:jersey-json:1.19.4 that uses JakartaEE9 and Jackson2.</description>
    <url>https://github.com/alexiworld/jersey-1.x</url>

    <!--
         Notes:
         - Thanks to Oracle, Sun, and PJ Fanning for contributing over the years
         - Decided to change com.github.pjfanning to com.github.alexiworld and jersey
         to denim not to confuse the originals with replicas. Any use of the source must
         be in accordance with the original authors.
         - Spring 3 must be integrated with JakartaEE9 because of missing Validator class
         (see https://issues.apache.org/jira/browse/CXF-8813 for more details),
         - Glassfish JAXB had to be added because of internal packages
         com.sun.xml.internal.bind.v2.model.runtime and com.sun.xml.internal.bind.v2.runtime
         (a.k.a. com.sun.xml.bind.v2.model.runtime and com.sun.xml.bind.v2.runtime)
         stripped from JDK 11+
         - Jakarta xml binding (and therefore Jakarta EE10) was downgraded from 4.0.1 to
         3.0.1 (i.e. Jakarta EE9) because Glassfish JAXB providing com.sun.xml.internal.*
         (or com.sun.xml.bind.*) packages is an older version of Glassfish JAXB
         (com.sun.xml.bind:jaxb-impl:3.0.0). If we leave Jakarta xml binding at 4.0.1
         when JSONHelper.getJaxbProvider() is invoked, the latter calls Class.forName()
         to load Glassfish JAXB's class org.glassfish.jaxb.runtime.v2.runtime.JAXBContextImpl.
         JAXBContextImpl unfortunately imports jakarta.xml.bind.Validator and as the one is
         not present in Jakarta xml binding 4.0.1 a ClassNotFoundException will be thrown.
         - javax.xml is OK to be used as it is part of JDK
         - javax.xml.bind was to be replaced by jakarta.xml.bind
         - jackson2ish versions used in pjfanning had to be upgraded to 2.16.0 because of
           some problems, which do not recall now.
         - Moxy had to be downgraded because of some problems, which do not recall now.
    -->

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <!-- <jersey.core.version>1.19.4</jersey.core.version>               -->
        <denim.core.version>1.99.99</denim.core.version>
        <!-- <jackson2.version>2.12.7</jackson2.version>                     -->
        <!-- <jackson2.databind.version>2.12.7.1</jackson2.databind.version> -->
        <jackson2.version>2.16.0</jackson2.version>
        <jackson2.databind.version>2.16.0</jackson2.databind.version>
        <jaxb.version>2.2.3-1</jaxb.version>
        <!-- <moxy.version>2.4.2</moxy.version>                              -->
        <moxy.version>3.0.1</moxy.version>
        <junit.version>4.13.2</junit.version>
    </properties>

    <licenses>
        <license>
            <name>CDDL 1.1</name>
            <url>http://glassfish.java.net/public/CDDL+GPL_1_1.html</url>
            <distribution>repo</distribution>
        </license>
        <license>
            <name>GPL2 w/ CPE</name>
            <url>http://glassfish.java.net/public/CDDL+GPL_1_1.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>JerseyTeam</id>
            <name>Jersey Team</name>
        </developer>
        <developer>
            <id>pjfanning</id>
            <name>PJ Fanning</name>
        </developer>
    </developers>

    <profiles>
        <profile>
            <id>cobertura</id>
            <activation>
                <property>
                    <name>cobertura</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.github.alexiworld</groupId>
                    <artifactId>denim-core</artifactId>
                    <version>${denim.core.version}</version>
                    <classifier>cobertura</classifier>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.github.alexiworld</groupId>
                    <artifactId>denim-core</artifactId>
                    <version>${denim.core.version}</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>1.5.4</version>
            <exclusions>
              <exclusion>
                <groupId>stax</groupId>
                <artifactId>stax-api</artifactId>
              </exclusion>
            </exclusions>
        </dependency>

        <!-- https://stackoverflow.com/questions/50295487/noclassdeffounderror-could-not-initialize-class-com-sun-xml-bind-v2-model-impl -->
<!--        <dependency>-->
<!--            <groupId>com.sun.xml.bind</groupId>-->
<!--            <artifactId>jaxb-impl</artifactId>-->
<!--            <version>${jaxb.version}</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>javax.xml.bind</groupId>-->
<!--            <artifactId>jaxb-api</artifactId>-->
<!--            <version>2.3.1</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.glassfish.jaxb</groupId>-->
<!--            <artifactId>jaxb-runtime</artifactId>-->
<!--            <version>2.3.1</version>-->
<!--            <scope>runtime</scope>-->
<!--        </dependency>-->
        <!-- https://mvnrepository.com/artifact/jakarta.xml.bind/jakarta.xml.bind-api -->
        <dependency>
            <groupId>com.github.alexiworld</groupId>
            <artifactId>denim-core</artifactId>
            <version>${denim.core.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <!-- <version>4.0.1</version> -->
            <version>3.0.1</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.moxy</artifactId>
            <version>${moxy.version}</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>3.0.0</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson2.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson2.databind.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.jakarta.rs/jackson-jakarta-rs-json-provider -->
        <dependency>
            <groupId>com.fasterxml.jackson.jakarta.rs</groupId>
            <artifactId>jackson-jakarta-rs-json-provider</artifactId>
            <version>${jackson2.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.jakarta.rs/jackson-jakarta-rs-base -->
        <dependency>
            <groupId>com.fasterxml.jackson.jakarta.rs</groupId>
            <artifactId>jackson-jakarta-rs-base</artifactId>
            <version>${jackson2.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
            </resource>
            <resource>
                <directory>${basedir}/src/main/java</directory>
                <includes>
                    <include>META-INF/**/*</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- To turn off (tests) errors caused by JDK version upgrades    -->
                <!-- had to open java.base and java.lang packages to all unnamed  -->
                <!-- Adding missing modules in newer JDK versions is not required -->
                <configuration>
                    <forkMode>always</forkMode>
                    <!-- <argLine>&#45;&#45;add-modules java.xml.bind</argLine>   -->
                    <!-- <argLine>&#45;&#45;add-modules java.activation</argLine> -->
                    <argLine>--add-opens=java.base/java.lang=ALL-UNNAMED</argLine>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.sun.istack</groupId>
                <artifactId>maven-istack-commons-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <configuration>
                            <resources>
                                <directory>${basedir}/src/main/resources</directory>
                                <includes>
                                    <include>**/*.properties</include>
                                </includes>
                            </resources>
                            <destDir>${project.build.directory}/generated-sources</destDir>
                            <localizationUtilitiesPkgName>com.sun.jersey.localization</localizationUtilitiesPkgName>
                        </configuration>
                        <goals>
                            <goal>rs-gen</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.6</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Export-Package>com.sun.jersey.api.json, com.sun.jersey.json.impl.*</Export-Package>
                        <Import-Package>
                            com.sun.xml.bind.annotation;resolution:=optional,com.sun.xml.bind.v2.*;resolution:=optional,
                            org.eclipse.persistence.*;resolution:=optional,com.sun.xml.internal.bind.v2.*;resolution:=optional,
                            *
                        </Import-Package>
                    </instructions>
                    <unpackBundle>true</unpackBundle>
                </configuration>
             </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-javadoc-plugin</artifactId>-->
<!--                <version>3.2.0</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>attach-sources</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>jar</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

</project>
